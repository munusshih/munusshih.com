---
import { marked } from "marked"; // install via npm i marked
import BasicLayout from "./Basic.astro";
import NextProject from "@/components/NextProject.astro";
import { toTitleCase } from "@/scripts/typography";
import { formatDateRange } from "@/scripts/cleanDate";
import type { CollectionEntry } from "astro:content";
type Props = CollectionEntry<"work">["data"];
import { SITE_TITLE } from "@/consts";

const {
  title,
  description,
  buttons = [],
  credit,
  recognition = [],
  roles,
  tags,
  startDate,
  endDate,
  heroImage,
  images = [],
} = Astro.props;

const parsedDescription = description
  ? marked.parse(description, { gfm: true })
  : null;

const parsedCredit = credit ? marked.parse(credit, { gfm: true }) : null;
const parsedExcerpt =
  parsedDescription.match(/<p>(.*?)<\/p>/)?.[1].replace(/<[^>]+>/g, "") || "";
const parsedRecognition = recognition.map((item) => marked.parseInline(item));
---

<BasicLayout
  title={`${title} â€” ${SITE_TITLE}`}
  description={parsedExcerpt}
  image={heroImage?.replace("mp4", "jpg") || images[0]}
>
  <main>
    <div
      class="fade-in grid flex-col gap-4 px-[var(--page-margin)] py-4 md:grid-cols-3 md:gap-8"
    >
      <h1 class="title heading1 col-span-2">{title}</h1>
      <p class="code text-balance text-gray-400">
        {tags.map((tag) => toTitleCase(tag)).join(", ")},{" "}
        {startDate && formatDateRange(startDate, endDate)}
      </p>
    </div>
    {
      buttons.length > 0 && (
        <div class="mt-2 flex-row flex-wrap gap-x-4 px-[var(--page-margin)]">
          {buttons.map((item) => (
            <a class="fade-in" href={item[1]} target="_blank">
              <button class="heading3 cursor-pointer rounded-full border px-4 py-2">
                {item[0]}
              </button>
            </a>
          ))}
        </div>
      )
    }
    <div class="fade-in m-auto flex justify-center pt-10">
      <video
        class="mb-10 aspect-[16/9] h-auto overflow-hidden rounded-2xl lg:max-w-[80%]"
        loop
        muted
        playsinline
        autoPlay
        preload="auto"
        src={heroImage}
        poster={heroImage}></video>
    </div>
    <div class="relative mt-2 mb-8 lg:mt-20 lg:mb-28">
      <input type="checkbox" id="expand-article" class="peer hidden" />

      <article
        class="fade-in mb-8 grid max-h-[20vh] gap-10 overflow-hidden transition-all duration-300 peer-checked:max-h-[200rem] md:max-h-none md:grid-cols-3"
      >
        <!-- your full article content here -->
        {
          parsedDescription && (
            <div
              class="heading2 col-span-2 flex max-w-prose flex-col gap-2 px-[var(--page-margin)] font-light text-pretty text-[#0A0A0A] prose-p:indent-[2em] prose-p:font-[300] prose-p:text-pretty prose-p:first-of-type:indent-[6em]"
              set:html={parsedDescription}
            />
          )
        }

        <div
          class="grid w-full flex-col gap-4 gap-x-20 px-[var(--page-margin)] 2xl:grid-cols-2"
        >
          {
            parsedCredit && (
              <div
                class="credit body1 max-w-prose !leading-normal text-pretty prose-h3:mb-2 prose-h3:font-bold prose-h3:not-first:mt-4"
                set:html={parsedCredit}
              />
            )
          }
          {
            recognition.length > 0 && (
              <div>
                <h3 class="body1 mb-4 font-bold">Recognitions</h3>
                <ul class="body1 flex flex-col gap-2">
                  {parsedRecognition.map((item) => (
                    <li set:html={item} class="leading-normal" />
                  ))}
                </ul>
              </div>
            )
          }
        </div>
      </article>

      <!-- FADE overlay for collapsed state only -->
      <div
        class="pointer-events-none absolute inset-x-0 bottom-10 h-32 bg-[linear-gradient(to_top,white_30%,transparent_70%)] peer-checked:hidden md:hidden"
      >
      </div>

      <!-- Toggle buttons -->
      <label
        for="expand-article"
        class="heading2 block cursor-pointer px-[var(--page-margin)] peer-checked:hidden md:hidden"
      >
        + View more
      </label>
      <label
        for="expand-article"
        class="heading2 hidden cursor-pointer px-[var(--page-margin)] peer-checked:block md:hidden"
      >
        - View less
      </label>
    </div>

    <div
      class="code prose-p:fade-in slot work-content body2 flex flex-col gap-4 px-[var(--page-margin)] pt-4 text-gray-600 xl:grid xl:gap-4 2xl:grid-cols-2 prose-img:mb-2"
    >
      <slot />
    </div>

    <NextProject />
  </main>

  <script>
    const slot = document.querySelectorAll(".slot > *");

    slot.forEach((p) => {
      p.classList.add("fade-in");
      p.classList.add("text-pretty");
    });
  </script>
</BasicLayout>
