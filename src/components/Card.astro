---
const { post } = Astro.props;
import { marked } from "marked";
const htmlExcerpt = post.excerpt && marked(post.excerpt);

function stripOuterParagraph(html: string) {
  return html.replace(/^<p>(.*?)<\/p>\s*$/s, "$1");
}

const htmlQuote = post.quote && stripOuterParagraph(marked(post.quote));

import Swiper from "@/components/utils/Swiper.astro";
import Media from "@/components/utils/Media.astro";
import Iframe from "@/components/utils/Iframe.astro";
---

<article class="fade-in w-full border-b py-2 odd:border-r">
  <div class="mb-2 flex w-full flex-col items-start justify-between px-2">
    <div class="w-full">
      <h3 class="mr-2 inline-block tracking-tighter">{post.title}</h3>
      {
        post.tag && (
          <p class="body-text mb-2 inline-block text-gray-500">
            {" "}
            {`${post.tag}`}
          </p>
        )
      }
    </div>
  </div>

  {
    post.quote && post.quote.length > 0 && !post.excerpt && (
      <blockquote
        class="text-gray-70 relative max-w-[65ch] px-2 py-4 pr-4 text-2xl leading-tight text-pretty before:inline-block before:content-['“'] after:inline-block after:content-['”'] md:text-3xl"
        set:html={htmlQuote}
      />
    )
  }

  {
    post.images && post.images.length > 1 ? (
      <Swiper images={post.images} />
    ) : post.images && post.images.length === 1 ? (
      <div class="flex aspect-[16/9] overflow-hidden">
        <Media
          src={
            Array.isArray(post.images[0]) ? post.images[0][0] : post.images[0]
          }
          alt={post.description || post.title || post.quote}
          isVideo={
            Array.isArray(post.images[0])
              ? post.images[0][0].match(/\.(mp4|webm|ogg)$/i)
              : post.images[0].match(/\.(mp4|webm|ogg)$/i)
          }
          scaling={
            Array.isArray(post.images[0]) ? post.images[0][1] : undefined
          }
        />
      </div>
    ) : null
  }

  {
    post.iframe && (
      <Iframe
        src={post.iframe.src}
        aspect_ratio={post.iframe.aspect_ratio}
        title={post.iframe.title}
      />
    )
  }

  {
    post.excerpt && post.excerpt.length > 0 && (
      <div
        class="text-gray-70 body-text mb-4 flex max-w-prose flex-col gap-4 px-2 pt-4 pr-4 text-black"
        set:html={htmlExcerpt}
      />
    )
  }

  {
    post.link && (
      <div class="w-full border-y px-2 py-2">
        <a target="_blank" href={post.link.href} class="">
          {`⌦ ${post.link?.text || "Learn More"}`}
        </a>
      </div>
    )
  }

  {
    post.recognition && post.recognition.length > 0 && (
      <ul class="mt-4 flex w-full flex-col text-gray-500">
        {post.recognition.map((item, index) => (
          <li key={index} class="body-text">
            {item.split(/(\[.*?\]\(.*?\))/g).map((part, idx) =>
              part.match(/\[.*?\]\(.*?\)/) ? (
                <a target="_blank" key={idx} href={part.match(/\((.*?)\)/)[1]}>
                  {part.match(/\[(.*?)\]/)[1]}
                </a>
              ) : (
                part
              ),
            )}
          </li>
        ))}
      </ul>
    )
  }
</article>
